// anonymous class : 로컬 클래스 vs 익명 클래스
package com.eomcs.oop.ex11.e;

public class Exam0120 {
  // 인터페이스의 경우 static으로 선언하지 않아도 스태틱 멤버에서 사용할 수 있다.
  interface A {
    void print();
  }

  public static void main(final String[] args) {
    // 익명 클래스로 인터페이스 구현하기
    // 문법:
    // => 인터페이스명 레퍼런스 = new 인터페이스명() {}
    //
    // 5단계 : 익명 클래스의 생성자가 없기 때문에 수퍼 클래스의 생성자를 호출한다.
    // => 객체 생성할 때 항상 생성자를 호출해야 하는데, 
    //    클래스에 이름이 없으면 생성자를 만들 수 없다.
    //    따라서 호출할 익명 클래스의 생성자가 없다.
    //    그래서 수퍼 클래스의 생성자를 호출해야 한다.
    //    자바의 모든 클래스는 따로 수퍼 클래스를 지정하지 않으면 
    //    java.lang.Object 클래스가 수퍼 클래스로 자동 설정된다.
    //    바로 그 Object 클래스의 생성자를 호출하도록 지정해야 한다.
    //    Object 클래스의 생성자는 기본 생성자 하나 뿐이다.
    //    인터페이스 이름 뒤에 기본 생성자를 호출하는 괄호를 추가한다.
    new A() {
      @Override
      public void print() {
        System.out.println("Hello!");
      }
    };
    
    A obj = new ();
    obj.print();
  }
}
