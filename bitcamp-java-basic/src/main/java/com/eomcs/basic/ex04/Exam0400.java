package com.eomcs.basic.ex04;

public class Exa  0400 {
  
  public static void main(String[] args) {
        //정수
        byte b;
        short s;
        int h;
        long v;
        
        float a; //4바이트
        double m; //8바이트
        
        //문자
        char t;
        
        //논리
        boolean bool;
        
        //레러런스
         String str;
         //1바이트 = 8비트
         //4바이트 = 32비트
         
        
         //변수의 메모리크기
         //정수  리터럴은 기본이 4바이트이다
         //ㄹ원래 작은메모리에 저장할수 없지만
         //오름쪽의 값이 4바이트 정수 리터럴 일경우
         //메모리에 그 리터럴을 저장할수 읶다면 허락한다
         
         
         b = -128;
         b = 127;
         
         //b = -129;
         
         //b = 128;
         
         //4 바이트 리터럴 끼리의 연산결과는 리터럴로 ㅍ취급된다
         b = 20 * 3;
        
         b = 120 + 7;
         
         
         
         
         byte b2 = 20;
         //b = 100 + b2; //변수와 리터럴은 안된다
         
         // 
         s = -32768;
         s = 32767; //0을 넣기때ㅜㅁ네
        //s = -32769
         
         
         
       
         
         //b = 100L;
         //s = 100L;
         
         byte b3;
         //b3 = b;
         //b3 = l;
         short s2;
         s2 = b;
         //s2 = i;
         //s2 = l;
         
         int i2;
         i2 = b;
         i2 = s;
         
         long l2;
         l2 =b;
       
         
         
         s = -32768;
         s = 32767;
        
        char c2; //유니코드값임(2바이트 양수만 저장가능)
        //= -32768;
        c2 = 0;
        c2 = 65535;
        
        
         
         //c2 = s;
         
        
         //부동소수점은 7자리까지의 숫자만 유효하다
         //그이상의 자릿수일 경우
         //값이 잘린다
         //또느 반올림 처리 된다
         //유효자리수를 넘어간다고 오류가 발생하진 않느다
         
         
         
      
         float f1 = 1.234567f;
         System.out.println(f1);
         
         
         
         
         
         //4  바이트는 7자리 넘어가지 ㅏ않게 함다
         
         
          //f =2345678912.123456;
            
         //4바이트를 넘어가는 값은 자른다
         //따라서 f에들어가는 값은 이미 잘린값이다
         
         
         
          
         d = 234.5678f;
         
         
         System.out.println(d);
    
            
         
        
           
     
     
     
     
    
  }

}
